{"version":3,"sources":["components/Drinks.js","components/LoadingSpinner.js","components/NameSearch.js","components/RandomSearch.js","firebase.js","components/FavouritesContainer.js","App.js","serviceWorker.js","index.js"],"names":["Drinks","handleToggle","setState","plusButtonShown","checkButtonShown","state","className","key","this","props","src","image","alt","title","ingredients","map","ingredient","quantity","recipe","onClick","handleSave","Component","LoadingSpinner","NameSearch","drinks","mainPageClass","value","userInput","type","placeholder","onChange","handleChange","autoFocus","handleSubmit","loading","drink","strDrinkThumb","strDrink","strInstructions","idDrink","strIngredient1","strMeasure1","strIngredient2","strMeasure2","strIngredient3","strMeasure3","strIngredient4","strMeasure4","strIngredient5","strMeasure5","strIngredient6","strMeasure6","refreshPage","RandomSearch","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FavouritesContainer","deleteActivity","database","ref","child","remove","favDrinks","on","res","newState","data","val","push","favDrink","favClassName","handleClose","App","handleNameSearch","random","searchByName","handleRandomSearch","axios","url","dataType","method","then","setTimeout","e","target","preventDefault","urlCallValue","window","location","reload","handleFav","dbRef","savedDrinks","favVisible","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.56a54985.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport '../App.css';\n\nclass Drinks extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tplusButtonShown: true,\n\t\t\tcheckButtonShown: false,\n\t\t}\n\t}\n\n\t// function to change the icon when save button is clicked\n\thandleToggle = () => {\n\t\tthis.setState({\n\t\t\tplusButtonShown: false,\n\t\t\t// plusButtonShown: this.state.plusButtonShown ? false : true,\n\t\t\tcheckButtonShown: true,\n\t\t\t// checkButtonShown: this.state.checkButtonShown ? false : true,\n\t\t})\n\t}\n\n    render() {\n        return(\n            <div className=\"drink animateBottom\" key={this.props.key}>\n\t\t\t\t<div className=\"drinkImage\">\n\t\t\t\t\t<img src={this.props.image} alt={this.props.title}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"drinkDescription\">\n\t\t\t\t\t<h2>{this.props.title}</h2>\n\t\t\t\t\t<p>You will need:</p>\n\t\t\t\t\t<ul className=\"ingredients\">\n\t\t\t\t\t\t{(this.props.ingredients.map(ingredient => {\n\t\t\t\t\t\t\treturn <li>{ingredient.ingredient ? ingredient.ingredient : null}{ingredient.quantity ? `: ${ingredient.quantity}` : null}</li>\n\t\t\t\t\t\t}))}\n\t\t\t\t\t</ul>\n\t\t\t\t\t<p>{this.props.recipe}</p>\n\t\t\t\t</div>\n\n\t\t\t\t{/* save buttons below */}\n\t\t\t\t<div className=\"saveButtons\">\n\t\t\t\t\t{this.state.plusButtonShown && <button className=\"saveBtn plusBtn\" onClick={this.handleToggle}>\n\t\t\t\t\t\t<i className=\"fas fa-plus\" onClick={this.props.handleSave}></i>\n\t\t\t\t\t</button>}\n\n\t\t\t\t\t{this.state.checkButtonShown && <button className=\"saveBtn checkBtn\" onClick={this.handleToggle}>\n\t\t\t\t\t\t<i className=\"fas fa-check\"></i>\n\t\t\t\t\t</button>}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n        )\n    }\n}\n\nexport default Drinks;","import React, {Component} from 'react';\nimport '../App.css';\n\nclass LoadingSpinner extends Component {\n    render() {\n        return (\n            <div className=\"loadingAnimation\">\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        )\n    }\n}\n\nexport default LoadingSpinner","import React, {Component} from 'react';\nimport '../App.css';\nimport Drinks from \"./Drinks\"\nimport LoadingSpinner from \"./LoadingSpinner\"\n\nclass NameSearch extends Component {\n\n\trender() {\n\t\tif (this.props.drinks !== null) {\n\t\t\treturn(\n\t\t\t\t<div className={`animateTop ${this.props.mainPageClass}`}>\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<input value={this.props.userInput} type=\"text\" placeholder=\"Enter cocktail name\" onChange={this.props.handleChange} autoFocus/>\n\t\t\t\t\t\t<button className=\"menuBtn\" onClick={this.props.handleSubmit}>Give me that drink</button>\n\t\t\t\t\t</form>\n\n\t\t\t\t\t{this.props.loading ? <LoadingSpinner /> : this.props.drinks.map(drink => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Drinks  \n\t\t\t\t\t\t\t\tdrinks = {this.props.drinks}\n\t\t\t\t\t\t\t\timage={drink.strDrinkThumb} \n\t\t\t\t\t\t\t\ttitle={drink.strDrink} \n\t\t\t\t\t\t\t\trecipe={drink.strInstructions} \n\t\t\t\t\t\t\t\tkey={drink.idDrink} \n\t\t\t\t\t\t\t\tplusButtonShown={this.props.plusButtonShown} \n\t\t\t\t\t\t\t\tcheckButtonShown={this.props.checkButtonShown} \n\t\t\t\t\t\t\t\thandleToggle={this.props.handleToggle}\n\t\t\t\t\t\t\t\thandleSave={this.props.handleSave}\n\t\t\t\t\t\t\t\tingredients={[{ingredient: drink.strIngredient1, quantity: drink.strMeasure1}, {ingredient: drink.strIngredient2, quantity: drink.strMeasure2}, {ingredient: drink.strIngredient3, quantity: drink.strMeasure3}, {ingredient: drink.strIngredient4, quantity: drink.strMeasure4}, {ingredient: drink.strIngredient5, quantity: drink.strMeasure5}, {ingredient: drink.strIngredient6, quantity: drink.strMeasure6}]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\treturn(\n\t\t\t\t<div className=\"errorDescription\">\n\t\t\t\t\t<h2>Unfortunately, I don't recognize this drink :(</h2>\n\t\t\t\t\t<button className=\"menuBtn\" onClick={this.props.refreshPage}>Try another one</button>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default NameSearch","import React, {Component} from 'react';\nimport '../App.css';\nimport Drinks from \"./Drinks\"\nimport LoadingSpinner from \"./LoadingSpinner\"\n\nclass RandomSearch extends Component {\n\n\trender() {\n\t\treturn(\n\t\t\t<div className={this.props.mainPageClass}>\n\t\t\t\t{this.props.loading ? <LoadingSpinner /> : this.props.drinks.map(drink => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Drinks className=\"animateBottom\"\n\t\t\t\t\t\t\timage={drink.strDrinkThumb} \n\t\t\t\t\t\t\ttitle={drink.strDrink} \n\t\t\t\t\t\t\trecipe={drink.strInstructions} \n\t\t\t\t\t\t\tkey={drink.idDrink} \n\t\t\t\t\t\t\tplusButtonShown={this.props.plusButtonShown} \n\t\t\t\t\t\t\tcheckButtonShown={this.props.checkButtonShown} \n\t\t\t\t\t\t\thandleToggle={this.props.handleToggle}\n\t\t\t\t\t\t\thandleSave={this.props.handleSave}\n\t\t\t\t\t\t\tingredients={[{ingredient: drink.strIngredient1, quantity: drink.strMeasure1}, {ingredient: drink.strIngredient2, quantity: drink.strMeasure2}, {ingredient: drink.strIngredient3, quantity: drink.strMeasure3}, {ingredient: drink.strIngredient4, quantity: drink.strMeasure4}, {ingredient: drink.strIngredient5, quantity: drink.strMeasure5}, {ingredient: drink.strIngredient6, quantity: drink.strMeasure6}]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default RandomSearch","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBNowU0ANWey7jm0n4QgDUn4X9SD8cGu7A\",\n    authDomain: \"friday-night-assistant.firebaseapp.com\",\n    databaseURL: \"https://friday-night-assistant.firebaseio.com\",\n    projectId: \"friday-night-assistant\",\n    storageBucket: \"friday-night-assistant.appspot.com\",\n    messagingSenderId: \"753588861739\",\n    appId: \"1:753588861739:web:ddfa92c85669e8ab24636e\"\n  };\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, {Component} from 'react';\nimport '../App.css';\nimport firebase from '../firebase';\n\nclass FavouritesContainer extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n\t\t\tfavDrinks: [],\n        }\n    }\n\n    componentDidMount() {\n        const dbRef = firebase.database().ref();\n        dbRef.on(\"value\", (res) => {\n\t\t\tconst newState = [];\n\t\t\tconst data = res.val();\n\t\t\tfor (let key in data) {\n\t\t\t\tnewState.push({\n\t\t\t\t\tfavDrink: data[key],\n\t\t\t\t\tkey: key\n\t\t\t\t})\n\t\t\t}\n          \tthis.setState({\n\t\t\t\tfavDrinks: newState,\n\t\t\t});\n        });\n\t}\n\t  \n\t  deleteActivity = (key) => {\n        const dbRef = firebase.database().ref();\n        dbRef.child(key).remove();\n    };\n\n    render() {\n        return (\n            <div className={`favMenu ${this.props.favClassName}`}>\n                <div className=\"closeFavBtn\" onClick={this.props.handleClose}>\n                    <i className=\"fas fa-times\"></i>\n                </div>\n\n                <h3>Saved Selection</h3>\n\n                {this.state.favDrinks.map(({key, favDrink}) => {\n                    return(\n                        <div key={key} className=\"drink favDrink\">\n                            <div className=\"drinkImage\">\n\t\t\t\t\t            <img src={favDrink.strDrinkThumb} />\n\t\t\t\t            </div>\n\t\t\t\t\t\t\t<div className=\"drinkDescription\">\n\t\t\t\t\t\t\t\t<h2>{favDrink.strDrink}</h2>\n\t\t\t\t\t\t\t\t<p>You will need:</p>\n\t\t\t\t\t\t\t\t<ul className=\"ingredients\">\n\t\t\t\t\t\t\t\t\t<li>{`${favDrink.strIngredient1 ? `${favDrink.strIngredient1}:` : null} ${favDrink.strMeasure1 ? favDrink.strMeasure1 : null}`}</li>\n\t\t\t\t\t\t\t\t\t<li>{`${favDrink.strIngredient2 ? `${favDrink.strIngredient2}:` : null} ${favDrink.strMeasure2 ? favDrink.strMeasure2 : null}`}</li>\n\t\t\t\t\t\t\t\t\t<li>{`${favDrink.strIngredient3 ? `${favDrink.strIngredient3}:` : null} ${favDrink.strMeasure3 ? favDrink.strMeasure3 : null}`}</li>\n\t\t\t\t\t\t\t\t\t<li>{`${favDrink.strIngredient4 ? `${favDrink.strIngredient4}:` : null} ${favDrink.strMeasure4 ? favDrink.strMeasure4 : null}`}</li>\n\t\t\t\t\t\t\t\t\t<li>{`${favDrink.strIngredient5 ? `${favDrink.strIngredient5}:` : null} ${favDrink.strMeasure5 ? favDrink.strMeasure5 : null}`}</li>\n\t\t\t\t\t\t\t\t\t<li>{`${favDrink.strIngredient6 ? `${favDrink.strIngredient6}:` : null} ${favDrink.strMeasure6 ? favDrink.strMeasure6 : null}`}</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t<p>{favDrink.strInstructions}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"saveButtons\">\n\t\t\t\t\t\t\t\t<button className=\"saveBtn plusBtn\">\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-times\" onClick={() => this.deleteActivity(key)}></i>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n                        </div>\n                    )\n                })}\n                \n            </div>\n        )\n    }\n}\n\nexport default FavouritesContainer","import React, {Component} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport NameSearch from './components/NameSearch'\nimport RandomSearch from './components/RandomSearch'\nimport FavouritesContainer from './components/FavouritesContainer'\nimport firebase from './firebase'\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      searchByName: false,\n      random: false,\n      userInput: '',\n      drinks: [],\n      ingredients: [],\n      loading: false,\n      // favVisible: false,\n      favDrinks: [],\n      favClassName: '',\n    }\n  }\n\n  handleNameSearch = () => {\n    this.setState({\n      drinks: [],\n      ingredients: [],\n      random: false,\n      searchByName: true,\n      userInput: '',\n      plusButtonShown: true,\n\t\t\tcheckButtonShown: false,\n    })  \n  }\n\n  handleRandomSearch = () => {\n    this.setState({\n      drinks: [],\n      searchByName: false,\n      random: true,\n      plusButtonShown: true,\n      checkButtonShown: false,\n      loading: true,\n    })\n    axios({\n      url: `https://www.thecocktaildb.com/api/json/v1/1/random.php`,\n      dataType: 'json',\n      method: 'GET'\n    }).then((res) => {\n      \n      setTimeout( () => {\n        this.setState({\n          drinks: res.data.drinks,\n          userInput: '',\n          loading: false\n        })\n      }, 1000)\n    })\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      userInput: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.setState({\n      drinks: [],\n      loading: true,\n    })\n\n    let urlCallValue = '';\n    if (this.state.searchByName) {\n      urlCallValue = 'search.php?s='\n    } \n    // else if (this.state.searchByIngredient) {\n    //   urlCallValue = 'filter.php?i='\n    // } \n    else if (this.state.random) {\n      urlCallValue = 'random.php'\n    }\n\n    axios({\n      url: `https://www.thecocktaildb.com/api/json/v1/1/${urlCallValue}${this.state.userInput}`,\n      dataType: 'json',\n      method: 'GET'\n    }).then((res) => {\n      setTimeout( () => {\n        this.setState({\n          drinks: res.data.drinks,\n          userInput: '',\n          loading: false\n        })\n      }, 1000)\n    })\n  }\n\n  refreshPage = () => {\n    window.location.reload();\n  }\n  \n  handleFav = () => {\n    this.setState({\n      favClassName: 'menuAnimationOn',\n      mainPageClass: 'hidden',\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      favClassName: 'menuAnimationOff',\n      mainPageClass: 'visible',\n    })\n  }\n\n  handleSave = (e) => {\n    e.preventDefault();\n    const dbRef = firebase.database().ref();\n    // this.setState({\n    //   favDrinks: this.state.drinks,\n    // })\n    let savedDrinks = this.state.drinks[0];\n    dbRef.push(savedDrinks);\n    // fix the issue with adding the appropriate element from the array\n  }\n\n  render () {\n    return (\n      <div className=\"app wrapper\">\n        <div className=\"favContainer\">\n          <button className=\"favBtn\" onClick={this.handleFav}><i className=\"fas fa-cocktail\"></i></button>\n        </div>\n        <h1>Let me get you a drink</h1>\n        <div className=\"menuButtons\">\n          <button className=\"menuBtn\" onClick={this.handleNameSearch}>I know what I want</button>\n          <button className=\"menuBtn\" onClick={this.handleRandomSearch}>I am in the mood for anything</button>\n        </div>\n\n        {/* {this.state.favVisible ? <FavouritesContainer handleFav={this.handleFav} favVisible={this.state.favVisible} favClassName={this.state.favClassName}/> : null} */}\n\n        <FavouritesContainer handleFav={this.handleFav} favVisible={this.state.favVisible} favDrinks={this.state.favDrinks} favClassName={this.state.favClassName} handleClose={this.handleClose}/>\n\n        {this.state.searchByName ? \n          <NameSearch \n            mainPageClass={this.state.mainPageClass}\n            userInput={this.state.userInput}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            drinks={this.state.drinks}\n            refreshPage={this.refreshPage}\n            handleToggle={this.handleToggle}\n            plusButtonShown={this.state.plusButtonShown}\n            checkButtonShown={this.state.checkButtonShown}\n            loading={this.state.loading}\n            handleSave={this.handleSave}\n          /> : null\n        }\n        \n        {this.state.random ? \n          <RandomSearch \n            mainPageClass={this.state.mainPageClass}\n            drinks={this.state.drinks}\n            refreshPage={this.refreshPage}\n            plusButtonShown={this.state.plusButtonShown}\n            checkButtonShown={this.state.checkButtonShown}\n            handleToggle={this.handleToggle}\n            loading={this.state.loading}\n            handleSave={this.handleSave}\n          /> : null\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}