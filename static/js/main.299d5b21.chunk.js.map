{"version":3,"sources":["NameSearch.js","RandomSearch.js","App.js","serviceWorker.js","index.js"],"names":["NameSearch","this","props","drinks","className","value","userInput","type","placeholder","onChange","handleChange","onClick","handleSubmit","map","drink","key","idDrink","src","strDrinkThumb","alt","strDrink","strIngredient1","strMeasure1","strIngredient2","strMeasure2","strIngredient3","strMeasure3","strIngredient4","strMeasure4","strIngredient5","strMeasure5","strIngredient6","strMeasure6","strInstructions","refreshPage","Component","RandomSearch","App","handleNameSearch","setState","random","searchByName","handleRandomSearch","axios","url","dataType","method","then","res","data","console","log","state","e","target","preventDefault","urlCallValue","searchByIngredient","window","location","reload","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.299d5b21.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass NameSearch extends Component {\n\n\t// constructor() {\n\t// \tsuper();\n\t// \tthis.state = {\n\t// \t\tplusButtonShown: true,\n\t// \t\tminusButtonShown: false,\n\t// \t\trecipeShown: false,\n\t// \t}\n\t// }\n\n\t// handleToggle = () => {\n\t// \tthis.setState({\n\t// \t\tplusButtonShown: this.state.plusButtonShown ? false : true,\n\t// \t\tminusButtonShown: this.state.minusButtonShown ? false : true,\n\t// \t\ttestResultsShown: this.state.recipeShown ? false : true\n\t// \t})\n\t// }\n\t\n\n\trender() {\n\t\tif (this.props.drinks !== null) {\n\t\t\treturn(\n\t\t\t\t<div className=\"animateTop\">\n\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<input value={this.props.userInput} type=\"text\" placeholder=\"Enter cocktail name\" onChange={this.props.handleChange}/>\n\t\t\t\t\t\t\t<button onClick={this.props.handleSubmit}>Give me that drink</button>\n\t\t\t\t\t</form>\n\n\t\t\t\t\t{this.props.drinks.map(drink => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"drink animateBottom\" key={drink.idDrink}>\n\t\t\t\t\t\t\t\t<div className=\"drinkImage\">\n\t\t\t\t\t\t\t\t\t<img src={drink.strDrinkThumb} alt={drink.strDrink}/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"drinkDescription\">\n\t\t\t\t\t\t\t\t\t<h2>{drink.strDrink}</h2>\n\t\t\t\t\t\t\t\t\t<p>You will need:</p>\n\t\t\t\t\t\t\t\t\t<ul className=\"ingredients\">\n\t\t\t\t\t\t\t\t\t\t<li>{drink.strIngredient1 ? drink.strIngredient1 : null}{drink.strMeasure1 ? `: ${drink.strMeasure1}` : null}</li>\n                                        <li>{drink.strIngredient2 ? drink.strIngredient2 : null}{drink.strMeasure2 ? `: ${drink.strMeasure2}` : null}</li>\n                                        <li>{drink.strIngredient3 ? drink.strIngredient3 : null}{drink.strMeasure3 ? `: ${drink.strMeasure3}` : null}</li>\n                                        <li>{drink.strIngredient4 ? drink.strIngredient4 : null}{drink.strMeasure4 ? `: ${drink.strMeasure4}` : null}</li>\n                                        <li>{drink.strIngredient5 ? drink.strIngredient5 : null}{drink.strMeasure5 ? `: ${drink.strMeasure5}` : null}</li>\n                                        <li>{drink.strIngredient6 ? drink.strIngredient6 : null}{drink.strMeasure6 ? `: ${drink.strMeasure6}` : null}</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t<p>{drink.strInstructions}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\n\t\t\t\t\t{/* <div className=\"toggleButtons\">\n\n\t\t\t\t\t\t{this.state.plusButtonShown && <button className=\"expandBtn\" onClick={this.handleToggle}><i className=\"fas fa-plus\"></i></button>}\n\n\t\t\t\t\t\t{this.state.minusButtonShown && <button className=\"expandBtn\" onClick={this.handleToggle}><i className=\"fas fa-minus\"></i></button>}\n\n\t\t\t\t\t</div> */}\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\treturn(\n\t\t\t\t<div className=\"errorDescription\">\n\t\t\t\t\t<h2>Unfortunately, I don't recognize this drink :(</h2>\n\t\t\t\t\t<button onClick={this.props.refreshPage}>Try another one</button>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default NameSearch","import React, {Component} from 'react';\nimport './App.css';\n\nclass RandomSearch extends Component {\n    render() {\n        if(this.props.drinks !== null) {\n            return(\n                <div className=\"animateBottom\">\n                    {this.props.drinks.map(drink => {\n                        return (\n                            <div className=\"drink\" key={drink.idDrink}>\n                                <div className=\"drinkImage\">\n                                    <img src={drink.strDrinkThumb} alt={drink.strDrink}/>\n                                </div>\n                                <div className=\"drinkDescription\">\n                                    <h2>{drink.strDrink}</h2>\n                                    <p>You will need:</p>\n                                    <ul className=\"ingredients\">\n                                        <li>{drink.strIngredient1 ? drink.strIngredient1 : null}{drink.strMeasure1 ? `: ${drink.strMeasure1}` : null}</li>\n                                        <li>{drink.strIngredient2 ? drink.strIngredient2 : null}{drink.strMeasure2 ? `: ${drink.strMeasure2}` : null}</li>\n                                        <li>{drink.strIngredient3 ? drink.strIngredient3 : null}{drink.strMeasure3 ? `: ${drink.strMeasure3}` : null}</li>\n                                        <li>{drink.strIngredient4 ? drink.strIngredient4 : null}{drink.strMeasure4 ? `: ${drink.strMeasure4}` : null}</li>\n                                        <li>{drink.strIngredient5 ? drink.strIngredient5 : null}{drink.strMeasure5 ? `: ${drink.strMeasure5}` : null}</li>\n                                        <li>{drink.strIngredient6 ? drink.strIngredient6 : null}{drink.strMeasure6 ? `: ${drink.strMeasure6}` : null}</li>\n                                        \n                                        {/* <li>{drink.strIngredient2 ? drink.strIngredient2 : null}: {drink.strMeasure2}</li>\n                                        <li>{drink.strIngredient3 ? drink.strIngredient3 : null}: {drink.strMeasure3}</li>\n                                        <li>{drink.strIngredient4 ? drink.strIngredient4 : null}: {drink.strMeasure4}</li>\n                                        <li>{drink.strIngredient5 ? `${drink.strIngredient5}: ` : null}{drink.strMeasure5}</li>\n                                        <li>{drink.strIngredient6 ? `${drink.strIngredient6}: ` : null}{drink.strMeasure6}</li> */}\n                                        {/* <li>{drink.strIngredient5 ? drink.strIngredient5 : null}: {drink.strMeasure5}</li>\n                                        <li>{drink.strIngredient6 ? drink.strIngredient6 : null}: {drink.strMeasure6}</li> */}\n                                        {/* <li>{drink.strIngredient1}</li>\n                                        <li>{drink.strIngredient2}</li>\n                                        <li>{drink.strIngredient3}</li>\n                                        <li>{drink.strIngredient4}</li>\n                                        <li>{drink.strIngredient5}</li>\n                                        <li>{drink.strIngredient6}</li> */}\n                                    </ul>\n                                    <p>{drink.strInstructions}</p>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            )\n        } else {\n            return(\n\t\t\t\t<div>\n\t\t\t\t\t<h2 className=\"errorDescription\">Unfortunately, I don't recognize this drink :(</h2>\n\t\t\t\t\t<button onClick={this.props.refreshPage}>Try another one</button>\n\t\t\t\t</div>\n\t\t\t)\n        }\n    }\n}\n\nexport default RandomSearch","import React, {Component} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport NameSearch from './NameSearch'\n// import IngredientSearch from './IngredientSearch'\nimport RandomSearch from './RandomSearch'\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      searchByName: false,\n      // searchByIngredient: false,\n      random: false,\n      userInput: '',\n      drinks: [],\n    }\n  }\n\n  handleNameSearch = () => {\n    this.setState({\n      random: false,\n      searchByName: true,\n      // searchByIngredient: false,\n      userInput: ''\n    })  \n  }\n  // handleIngredientSearch = () => {\n  //   this.setState({\n  //     searchByName: false,\n  //     searchByIngredient: true,\n  //     random: false,\n  //   }) \n  // }\n  handleRandomSearch = () => {\n    this.setState({\n      searchByName: false,\n      // searchByIngredient: false,\n      random: true,\n    })\n    axios({\n      url: `https://www.thecocktaildb.com/api/json/v1/1/random.php`,\n      dataType: 'json',\n      method: 'GET'\n    }).then((res) => {\n      // console.log(res);\n      this.setState({\n        drinks: res.data.drinks\n      })\n      console.log(this.state.drinks);\n    })\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      userInput: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    let urlCallValue = '';\n    if (this.state.searchByName) {\n      urlCallValue = 'search.php?s='\n    } else if (this.state.searchByIngredient) {\n      urlCallValue = 'filter.php?i='\n    } else if (this.state.random) {\n      urlCallValue = 'random.php'\n    }\n\n    axios({\n      url: `https://www.thecocktaildb.com/api/json/v1/1/${urlCallValue}${this.state.userInput}`,\n      dataType: 'json',\n      method: 'GET'\n    }).then((res) => {\n      // console.log(res);\n      this.setState({\n        drinks: res.data.drinks,\n        userInput: ''\n      })\n      console.log(this.state.drinks);\n    })\n  }\n\n  refreshPage = () => {\n    window.location.reload();\n\t}\n\n  render () {\n    return (\n      <div className=\"app wrapper\">\n        <h1>Friday Night Assistant</h1>\n        <p>Hello there! My name is Sexy Ricardo and I will be your bartender for tonight. I know lots and lots of cool cocktail recipes. All you need to do is let me know what you feel like toinght and I will come up with the drink to spice up you evening.</p>\n\n        <div className=\"menuBtn\">\n          <button onClick={this.handleNameSearch}>I know what I want</button>\n          {/* <button onClick={this.handleIngredientSearch}>Something with specific ingredient</button> */}\n          <button onClick={this.handleRandomSearch}>I am in the mood for anything</button>\n        </div>\n\n        {this.state.searchByName ? <NameSearch userInput={this.state.userInput} handleChange={this.handleChange} handleSubmit={this.handleSubmit} drinks={this.state.drinks} refreshPage={this.refreshPage}/> : null}\n\n        {/* {this.state.searchByIngredient ? <IngredientSearch userInput={this.state.userInput} handleChange={this.handleChange} handleSubmit={this.handleSubmit} /> : null} */}\n        \n        {this.state.random ? <RandomSearch drinks={this.state.drinks} refreshPage={this.refreshPage} /> : null}\n\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}